/*
 * API
 * ## Welcome  This is a place to put general notes and extra information, for internal use.  To get started designing/documenting this API, select a version on the left. # Title No Description
 *
 * OpenAPI spec version: 3
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package tm.fantom.tmdbvw.api.netmodel;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * InlineResponse20044
 */

public class MovieDetailResponse {

    @SerializedName("tagline")
    private String tagLine;
    @SerializedName("overview")
    private String overview;
    @SerializedName("original_language")
    private String originalLanguage = null;

    @SerializedName("original_title")
    private String originalTitle = null;

    @SerializedName("video")
    private Boolean video = null;

    @SerializedName("title")
    private String title = null;

    @SerializedName("poster_path")
    private String posterPath = null;

    @SerializedName("backdrop_path")
    private String backdropPath = null;

    @SerializedName("spoken_languages")
    private List<InlineResponse20044SpokenLanguages> spokenLanguages = null;

    @SerializedName("revenue")
    private Integer revenue = null;

    @SerializedName("production_companies")
    private List<InlineResponse20037ProductionCompanies> productionCompanies = null;

    @SerializedName("release_date")
    private String releaseDate = null;

    @SerializedName("genres")
    private List<GenresResult> genres = null;

    @SerializedName("popularity")
    private BigDecimal popularity = null;

    @SerializedName("vote_average")
    private String voteAverage = null;

    @SerializedName("production_countries")
    private List<InlineResponse20044ProductionCountries> productionCountries = null;

    @SerializedName("id")
    private Integer id = null;

    @SerializedName("adult")
    private Boolean adult = null;

    @SerializedName("vote_count")
    private Integer voteCount = null;

    @SerializedName("budget")
    private String budget = null;

    /**
     * Gets or Sets status
     */
    @JsonAdapter(StatusEnum.Adapter.class)
    public enum StatusEnum {
        RUMORED("Rumored"),

        PLANNED("Planned"),

        IN_PRODUCTION("In Production"),

        POST_PRODUCTION("Post Production"),

        RELEASED("Released"),

        CANCELED("Canceled");

        private String value;

        StatusEnum(String value) {
            this.value = value;
        }

        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        public static StatusEnum fromValue(String text) {
            for (StatusEnum b : StatusEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }

        public static class Adapter extends TypeAdapter<StatusEnum> {
            @Override
            public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
                jsonWriter.value(enumeration.getValue());
            }

            @Override
            public StatusEnum read(final JsonReader jsonReader) throws IOException {
                String value = jsonReader.nextString();
                return StatusEnum.fromValue(String.valueOf(value));
            }
        }
    }

    @SerializedName("status")
    private StatusEnum status = null;

    public MovieDetailResponse originalLanguage(String originalLanguage) {
        this.originalLanguage = originalLanguage;
        return this;
    }

    /**
     * Get originalLanguage
     *
     * @return originalLanguage
     **/

    public String getOriginalLanguage() {
        return originalLanguage;
    }

    public void setOriginalLanguage(String originalLanguage) {
        this.originalLanguage = originalLanguage;
    }

    public MovieDetailResponse originalTitle(String originalTitle) {
        this.originalTitle = originalTitle;
        return this;
    }

    /**
     * Get originalTitle
     *
     * @return originalTitle
     **/

    public String getOriginalTitle() {
        return originalTitle;
    }

    public void setOriginalTitle(String originalTitle) {
        this.originalTitle = originalTitle;
    }

    public MovieDetailResponse video(Boolean video) {
        this.video = video;
        return this;
    }

    public String getTagLine() {
        return tagLine;
    }

    public MovieDetailResponse setTagLine(String tagLine) {
        this.tagLine = tagLine;
        return this;
    }

    public String getOverview() {
        return overview;
    }

    public MovieDetailResponse setOverview(String overview) {
        this.overview = overview;
        return this;
    }

    /**
     * Get video
     *
     * @return video
     **/

    public Boolean video() {
        return video;
    }

    public void setVideo(Boolean video) {
        this.video = video;
    }

    public MovieDetailResponse title(String title) {
        this.title = title;
        return this;
    }

    /**
     * Get title
     *
     * @return title
     **/

    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    public MovieDetailResponse posterPath(String posterPath) {
        this.posterPath = posterPath;
        return this;
    }

    /**
     * Get posterPath
     *
     * @return posterPath
     **/

    public String getPosterPath() {
        return posterPath;
    }

    public void setPosterPath(String posterPath) {
        this.posterPath = posterPath;
    }

    public MovieDetailResponse backdropPath(String backdropPath) {
        this.backdropPath = backdropPath;
        return this;
    }

    /**
     * Get backdropPath
     *
     * @return backdropPath
     **/

    public String getBackdropPath() {
        return backdropPath;
    }

    public void setBackdropPath(String backdropPath) {
        this.backdropPath = backdropPath;
    }

    public MovieDetailResponse spokenLanguages(List<InlineResponse20044SpokenLanguages> spokenLanguages) {
        this.spokenLanguages = spokenLanguages;
        return this;
    }

    public MovieDetailResponse addSpokenLanguagesItem(InlineResponse20044SpokenLanguages spokenLanguagesItem) {
        if (this.spokenLanguages == null) {
            this.spokenLanguages = new ArrayList<InlineResponse20044SpokenLanguages>();
        }
        this.spokenLanguages.add(spokenLanguagesItem);
        return this;
    }

    /**
     * Get spokenLanguages
     *
     * @return spokenLanguages
     **/

    public List<InlineResponse20044SpokenLanguages> getSpokenLanguages() {
        return spokenLanguages;
    }

    public void setSpokenLanguages(List<InlineResponse20044SpokenLanguages> spokenLanguages) {
        this.spokenLanguages = spokenLanguages;
    }

    public MovieDetailResponse revenue(Integer revenue) {
        this.revenue = revenue;
        return this;
    }

    /**
     * Get revenue
     *
     * @return revenue
     **/

    public Integer getRevenue() {
        return revenue;
    }

    public void setRevenue(Integer revenue) {
        this.revenue = revenue;
    }

    public MovieDetailResponse productionCompanies(List<InlineResponse20037ProductionCompanies> productionCompanies) {
        this.productionCompanies = productionCompanies;
        return this;
    }

    public MovieDetailResponse addProductionCompaniesItem(InlineResponse20037ProductionCompanies productionCompaniesItem) {
        if (this.productionCompanies == null) {
            this.productionCompanies = new ArrayList<InlineResponse20037ProductionCompanies>();
        }
        this.productionCompanies.add(productionCompaniesItem);
        return this;
    }

    /**
     * Get productionCompanies
     *
     * @return productionCompanies
     **/

    public List<InlineResponse20037ProductionCompanies> getProductionCompanies() {
        return productionCompanies;
    }

    public void setProductionCompanies(List<InlineResponse20037ProductionCompanies> productionCompanies) {
        this.productionCompanies = productionCompanies;
    }

    public MovieDetailResponse releaseDate(String releaseDate) {
        this.releaseDate = releaseDate;
        return this;
    }

    /**
     * Get releaseDate
     *
     * @return releaseDate
     **/

    public String getReleaseDate() {
        return releaseDate;
    }

    public void setReleaseDate(String releaseDate) {
        this.releaseDate = releaseDate;
    }

    public MovieDetailResponse genres(List<GenresResult> genres) {
        this.genres = genres;
        return this;
    }

    public MovieDetailResponse addGenresItem(GenresResult genresItem) {
        if (this.genres == null) {
            this.genres = new ArrayList<GenresResult>();
        }
        this.genres.add(genresItem);
        return this;
    }

    /**
     * Get genres
     *
     * @return genres
     **/

    public List<GenresResult> getGenres() {
        return genres;
    }

    public void setGenres(List<GenresResult> genres) {
        this.genres = genres;
    }

    public MovieDetailResponse popularity(BigDecimal popularity) {
        this.popularity = popularity;
        return this;
    }

    /**
     * Get popularity
     *
     * @return popularity
     **/

    public BigDecimal getPopularity() {
        return popularity;
    }

    public void setPopularity(BigDecimal popularity) {
        this.popularity = popularity;
    }

    public MovieDetailResponse voteAverage(String voteAverage) {
        this.voteAverage = voteAverage;
        return this;
    }

    /**
     * Get voteAverage
     *
     * @return voteAverage
     **/

    public String getVoteAverage() {
        return voteAverage;
    }

    public void setVoteAverage(String voteAverage) {
        this.voteAverage = voteAverage;
    }

    public MovieDetailResponse productionCountries(List<InlineResponse20044ProductionCountries> productionCountries) {
        this.productionCountries = productionCountries;
        return this;
    }

    public MovieDetailResponse addProductionCountriesItem(InlineResponse20044ProductionCountries productionCountriesItem) {
        if (this.productionCountries == null) {
            this.productionCountries = new ArrayList<InlineResponse20044ProductionCountries>();
        }
        this.productionCountries.add(productionCountriesItem);
        return this;
    }

    /**
     * Get productionCountries
     *
     * @return productionCountries
     **/

    public List<InlineResponse20044ProductionCountries> getProductionCountries() {
        return productionCountries;
    }

    public void setProductionCountries(List<InlineResponse20044ProductionCountries> productionCountries) {
        this.productionCountries = productionCountries;
    }

    public MovieDetailResponse id(Integer id) {
        this.id = id;
        return this;
    }

    /**
     * Get id
     *
     * @return id
     **/

    public Integer getId() {
        return id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public MovieDetailResponse adult(Boolean adult) {
        this.adult = adult;
        return this;
    }

    /**
     * Get adult
     *
     * @return adult
     **/

    public Boolean adult() {
        return adult;
    }

    public void setAdult(Boolean adult) {
        this.adult = adult;
    }

    public MovieDetailResponse voteCount(Integer voteCount) {
        this.voteCount = voteCount;
        return this;
    }

    /**
     * Get voteCount
     *
     * @return voteCount
     **/

    public Integer getVoteCount() {
        return voteCount;
    }

    public void setVoteCount(Integer voteCount) {
        this.voteCount = voteCount;
    }

    public MovieDetailResponse budget(String budget) {
        this.budget = budget;
        return this;
    }

    /**
     * Get budget
     *
     * @return budget
     **/

    public String getBudget() {
        return budget;
    }

    public void setBudget(String budget) {
        this.budget = budget;
    }

    public MovieDetailResponse status(StatusEnum status) {
        this.status = status;
        return this;
    }

    /**
     * Get status
     *
     * @return status
     **/

    public StatusEnum getStatus() {
        return status;
    }

    public void setStatus(StatusEnum status) {
        this.status = status;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        MovieDetailResponse movieDetailResponse = (MovieDetailResponse) o;
        return Objects.equals(this.originalLanguage, movieDetailResponse.originalLanguage) &&
                Objects.equals(this.originalTitle, movieDetailResponse.originalTitle) &&
                Objects.equals(this.video, movieDetailResponse.video) &&
                Objects.equals(this.title, movieDetailResponse.title) &&
                Objects.equals(this.posterPath, movieDetailResponse.posterPath) &&
                Objects.equals(this.backdropPath, movieDetailResponse.backdropPath) &&
                Objects.equals(this.spokenLanguages, movieDetailResponse.spokenLanguages) &&
                Objects.equals(this.revenue, movieDetailResponse.revenue) &&
                Objects.equals(this.productionCompanies, movieDetailResponse.productionCompanies) &&
                Objects.equals(this.releaseDate, movieDetailResponse.releaseDate) &&
                Objects.equals(this.genres, movieDetailResponse.genres) &&
                Objects.equals(this.popularity, movieDetailResponse.popularity) &&
                Objects.equals(this.voteAverage, movieDetailResponse.voteAverage) &&
                Objects.equals(this.productionCountries, movieDetailResponse.productionCountries) &&
                Objects.equals(this.id, movieDetailResponse.id) &&
                Objects.equals(this.adult, movieDetailResponse.adult) &&
                Objects.equals(this.voteCount, movieDetailResponse.voteCount) &&
                Objects.equals(this.budget, movieDetailResponse.budget) &&
                Objects.equals(this.status, movieDetailResponse.status);
    }

    @Override
    public int hashCode() {
        return Objects.hash(originalLanguage, originalTitle, video, title, posterPath, backdropPath, spokenLanguages, revenue, productionCompanies, releaseDate, genres, popularity, voteAverage, productionCountries, id, adult, voteCount, budget, status);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class InlineResponse20044 {\n");

        sb.append("    originalLanguage: ").append(toIndentedString(originalLanguage)).append("\n");
        sb.append("    originalTitle: ").append(toIndentedString(originalTitle)).append("\n");
        sb.append("    video: ").append(toIndentedString(video)).append("\n");
        sb.append("    title: ").append(toIndentedString(title)).append("\n");
        sb.append("    posterPath: ").append(toIndentedString(posterPath)).append("\n");
        sb.append("    backdropPath: ").append(toIndentedString(backdropPath)).append("\n");
        sb.append("    spokenLanguages: ").append(toIndentedString(spokenLanguages)).append("\n");
        sb.append("    revenue: ").append(toIndentedString(revenue)).append("\n");
        sb.append("    productionCompanies: ").append(toIndentedString(productionCompanies)).append("\n");
        sb.append("    releaseDate: ").append(toIndentedString(releaseDate)).append("\n");
        sb.append("    genres: ").append(toIndentedString(genres)).append("\n");
        sb.append("    popularity: ").append(toIndentedString(popularity)).append("\n");
        sb.append("    voteAverage: ").append(toIndentedString(voteAverage)).append("\n");
        sb.append("    productionCountries: ").append(toIndentedString(productionCountries)).append("\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    adult: ").append(toIndentedString(adult)).append("\n");
        sb.append("    voteCount: ").append(toIndentedString(voteCount)).append("\n");
        sb.append("    budget: ").append(toIndentedString(budget)).append("\n");
        sb.append("    status: ").append(toIndentedString(status)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

